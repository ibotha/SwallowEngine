/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   TextTexture.hpp                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ppreez <ppreez@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/09/04 11:57:17 by ppreez            #+#    #+#             */
/*   Updated: 2019/09/05 11:37:51 by ppreez           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#pragma once

#include <glad/glad.h>
#include "glm.hpp"

#include "Swallow/Renderer/Texture.hpp"
#include "freetype/include/ft2build.h"
#include FT_FREETYPE_H

struct s_Character {
    GLuint  TextureID;
    glm::ivec2 Size;
    glm::ivec2 Bearing;
    GLuint Advance;
};

namespace Swallow
{
    class TextTexture: public Texture
    {
        public:
            TextTexture();
            TextTexture(TextTexture const &rhs);
            TextTexture &operator=(TextTexture const &rhs);
            virtual ~TextTexture();

            virtual uint32_t GetWidth() const;
            virtual uint32_t GetHeight() const;
            virtual void Bind(uint32_t slot = 0) const;

            void RenderText(std::string text, GLfloat x, GLfloat y, GLfloat scale, glm::vec3 color) const;
        private:
            // TextTexture();
            std::map<GLchar, s_Character> m_Characters;
            FT_Face m_Face;
            FT_UInt m_Glyph_Width;
            FT_UInt m_Glyph_Height;
            uint32_t m_Width;
            uint32_t m_Height;
            uint32_t m_RendererID;
            

    };
}